The ``4-print_square`` module
=====================

Using ``print_square``
-------------------

Importing the function from the module:
	>>> print_square = __import__("4-print_square").print_square

Check for module docstring:
	>>> m = __import__("4-print_square").__doc__
	len(m) > 1
	True

Check for function docstring:
	>>> f = __import__("4-print_square").print_square.__doc__
	>>> len(f) > 1
	True

Check for normal use:
	>>> print_square(3)
	###
	###
	###
	>>> print_square(0)
	>>>print_square(1)
	#

Check for no size passed:
	>>> print_square()
	Traceback (most recent call last):
	...
	TypeError: print_square() missing 1 required positional argument: 'size'

Check for more than one argument:
	>>> print_square(4, 5)
	Traceback (most recent call last):
	...
	TypeError: print_square() takes 1 positional argument but 2 were given

Check for None passed:
	>>> print_square(None)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

Check for when size is negative:
	>>> print_square(-7)
	Traceback (most recent call last):
	...
	ValueError: size must be >= 0

Check for non int number types:
	>>> print_square(2.0)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer
	>>> print_square(-2.2)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

Check for non number types:
	>>> print_square(False)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer
	>>> print_square("8")
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

